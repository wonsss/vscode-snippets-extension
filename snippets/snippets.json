{
	"Create React Function Component": {
		"prefix": "rfc",
		"body": [
			"interface Props {}",
			"",
			"export const ${TM_FILENAME_BASE} = ({}: Props) => {",
			"    return (",
			"        <div>${TM_FILENAME_BASE}</div>",
			"    )",
			"};"
		],
		"description": "Create a React Arrow Function Component"
	},
	"Create Emotion Component": {
		"prefix": "rec",
		"body": [
			"import styled from '@emotion/styled';",
			"",
			"interface Props {}",
			"",
			"export const ${TM_FILENAME_BASE} = ({}: Props) => {",
			"  return <Container>${TM_FILENAME_BASE}</Container>;",
			"};",
			"",
			"const Container = styled.div``;",
			""
		],
		"description": "Create a React Emotion Component"
	},
	"Create React Hooks Component": {
		"prefix": "rhc",
		"body": [
			"interface $1Props {}",
			"",
			"export const use$1 = ({}: $1Props) => {",
			"    return {};",
			"};"
		],
		"description": "Create a React Hooks Component."
	},
	"Create React Hook Testing Code": {
		"prefix": "th",
		"body": [
			"import { renderHook } from '@testing-library/react'",
			"import { ${TM_FILENAME_BASE} } from './${TM_FILENAME_BASE}';",
			"",
			"const $2Spy = jest.spyOn($2, $3);",
			"",
			"describe('${TM_FILENAME_BASE}',() => {",
			"   it('test name', () => {",
			"      const { rerender } = renderHook(() => ${TM_FILENAME_BASE}());",
			"      expect($2Spy).to$4();",
			"   })",
			"})"
		],
		"description": "Create a React Hook Testing code."
	},
	"Create Storybook": {
		"prefix": "story",
		"body": [
			"import { Meta, Story } from '@storybook/react'",
			"import { ComponentProps } from 'react';",
			"import { ${TM_FILENAME_BASE/(.stories)//} } from './${TM_FILENAME_BASE/(.stories)//}';",
			"",
			"type Props = ComponentProps<typeof ${TM_FILENAME_BASE/(.stories)//}>;",
			"",
			"const Template: Story<Props> = (args) => <${TM_FILENAME_BASE/(.stories)//} {...args} />;",
			"",
			"export const Default = Template.bind({});",
			"",
			"Default.args = {};",
			"",
			"export default {",
			"title: '${RELATIVE_FILEPATH/(.stories.tsx)//g}',",
			"component: ${TM_FILENAME_BASE/(.stories)//},",
			"} as Meta;"
		],
		"description": "Create a Storybook for component."
	},
	"Create Zustand Store": {
		"scope": "typescript",
		"prefix": "zustand",
		"body": [
			"import create from 'zustand';",
			"",
			"interface State {",
			"  value: string;",
			"}",
			"",
			"const initialState: State = {",
			"  value: '',",
			"};",
			"",
			"export const use$1Store = create<State>((set) => ({",
			"  ...initialState,",
			"}));",
			""
		],
		"description": "Create a Zustand Store"
	}
}
